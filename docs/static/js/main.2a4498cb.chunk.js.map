{"version":3,"sources":["components/AddCategory.js","helpers/GetGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setinputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","prototype","PropTypes","func","isRequired","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","console","log","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","key","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"gPAGaA,EAAc,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAAmB,EACRC,mBAAS,IADD,mBACrCC,EADqC,KACzBC,EADyB,KAe5C,OACI,0BAAMC,SAVW,SAACC,GAClBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC1BR,GAAc,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACvCN,EAAc,OAMd,2BACIO,KAAK,OACLC,MAAQT,EACRU,SAjBc,SAACP,GACvBF,EAAcE,EAAEQ,OAAOF,YAsB/BZ,EAAYe,UAAY,CACpBd,c,OAAee,EAAUC,KAAKC,Y,2BC9BrBC,EAAO,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACbC,EADa,iDACmCC,UAAUH,GAD7C,+DAEAI,MAAMF,GAFN,cAEbG,EAFa,gBAGIA,EAAKC,OAHT,uBAGXC,EAHW,EAGXA,KAGFC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAO,CACHC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAI1Ca,QAAQC,IAAIR,GAdO,kBAeZA,GAfY,4CAAH,sDCEPS,EAAc,SAAC,GAAsB,IAArBN,EAAoB,EAApBA,GAAIC,EAAgB,EAAhBA,MAAOV,EAAS,EAATA,IAGpC,OADAa,QAAQC,IAAIL,EAAIC,EAAOV,GAEnB,yBAAKgB,UAAU,0CACb,yBAAKC,IAAKjB,EAAKkB,IAAKR,IACpB,+BAAKA,EAAL,OCHGS,EAAU,SAAC,GAAgB,IAAfrB,EAAc,EAAdA,SAAc,ECDX,SAACA,GAAc,IAAD,EACZlB,mBAAS,CAC/ByB,KAAM,GACNe,SAAS,IAHyB,mBAC/BC,EAD+B,KACxBC,EADwB,KActC,OATAC,qBAAU,WACN1B,EAAQC,GAAU0B,MAAM,SAAAC,GACpBH,EAAS,CACLjB,KAAMoB,EACNL,SAAS,SAGlB,CAACtB,IAEGuB,EDT0BK,CAAa5B,GAAjCa,EAJsB,EAI3BN,KAAae,EAJc,EAIdA,QAQrB,OACI,oCACI,wBAAIJ,UAAU,qCAAd,IAAoDlB,GAClDsB,GAAW,uBAAGJ,UAAU,oCAAb,WACb,yBAAKA,UAAU,aAGPL,EAAOJ,KAAK,SAAAC,GAAG,OACX,kBAAC,EAAD,eAAcmB,IAAKnB,EAAIC,IAAQD,UErB1CoB,EAAe,WAAM,MAEMhD,mBAAU,CAAC,cAFjB,mBAEvBiD,EAFuB,KAEXlD,EAFW,KAQ9B,OACI,oCACI,4CACA,kBAAC,EAAD,CAAaA,cAAiBA,IAC9B,6BAEA,4BAEQkD,EAAWtB,KAAK,SAAAT,GAAQ,OACpB,kBAAC,EAAD,CAAS6B,IAAM7B,EAAWA,SAAUA,U,MCb5DgC,IAASC,OACL,kBAAC,EAAD,MACAC,SAASC,eAAe,W","file":"static/js/main.2a4498cb.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nexport const AddCategory = ({setCategories}) => {\r\n    const [inputValue, setinputValue] = useState('');\r\n\r\n    const handleInputChange = (e) => {\r\n        setinputValue(e.target.value);\r\n    }\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault();\r\n        //console.log('Submit hecho');\r\n        if(inputValue.trim().length > 2){\r\n            setCategories(cats => [ inputValue, ...cats]);\r\n            setinputValue('');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <form onSubmit={ handleSubmit }>\r\n            <input \r\n                type=\"text\"\r\n                value={ inputValue }\r\n                onChange={ handleInputChange }\r\n            />\r\n        </form>\r\n    )\r\n}\r\n\r\nAddCategory.prototype = {\r\n    setCategories: PropTypes.func.isRequired\r\n}\r\n","export const getGifs = async( category) => {\r\n    const url = `https://api.giphy.com/v1/gifs/search?q=${encodeURI(category)}&limit=10&api_key=CN08G3gI6FgyzAOOpK74J2IyX6GQAX25`;\r\n    const resp = await fetch(url);\r\n    const { data } = await resp.json();\r\n\r\n    \r\n    const gifs = data.map( img => {\r\n        return {\r\n            id: img.id,\r\n            title: img.title,\r\n            url: img.images?.downsized_medium.url\r\n        }\r\n    });\r\n    \r\n    console.log(gifs);\r\n    return gifs;\r\n    //setimages(gifs);\r\n}","import React from 'react'\r\n\r\nexport const GifGridItem = ({id, title, url}) => {\r\n\r\n    console.log(id, title, url);\r\n    return (\r\n        <div className=\"card animate__animated animate__fadeIn\">\r\n          <img src={url} alt={title} />\r\n          <p> {title} </p>\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { useFetchGifs } from '../hooks/useFetchGifs'\r\nimport { GifGridItem } from './GifGridItem';\r\n//import { getGifs } from '../helpers/GetGifs';\r\n\r\nexport const GifGrid = ({category}) => {\r\n\r\n    // const [images, setimages] = useState([]);\r\n\r\n    const { data:images, loading } = useFetchGifs(category);\r\n\r\n   \r\n    \r\n    \r\n\r\n    //getGifs();\r\n    \r\n    return (\r\n        <>\r\n            <h3 className=\"animate__animated animate__fadeIn\"> {category}</h3>\r\n            { loading && <p className=\"animate__animated animate__flash\">Loading</p> }\r\n            <div className=\"card-grid\">\r\n            \r\n                {\r\n                    images.map( img => (     \r\n                        <GifGridItem  key={img.id} {...img}/>\r\n                    ))\r\n                }\r\n                \r\n            </div>\r\n        </>\r\n    )\r\n}\r\n","import { useState, useEffect } from \"react\";\r\nimport { getGifs } from '../helpers/GetGifs';\r\n\r\n\r\nexport const useFetchGifs = (category) => {\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n    useEffect(() => {\r\n        getGifs(category).then( imgs => {\r\n            setState({\r\n                data: imgs,\r\n                loading: true\r\n            });\r\n        })      \r\n    }, [category])\r\n\r\n    return state;\r\n}","import React, { useState } from 'react'\r\nimport { AddCategory } from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport const GifExpertApp = () => {\r\n    //const categorias = ['one punch', 'Samurai X', 'Dragon Ball'];\r\n    const [categories, setCategories] = useState( ['one punch']);\r\n   /*  const handleAdd = () => {\r\n        //setCategories([...categories, 'HunterXX']);\r\n        setCategories( cats => [...cats, 'HunterXX']);\r\n    } */\r\n    \r\n    return (\r\n        <>\r\n            <h2>GifExpertApp</h2>\r\n            <AddCategory setCategories= { setCategories } />\r\n            <hr/>\r\n            {/* <button onClick={handleAdd}>Agregar</button> */}\r\n            <ol>\r\n                {\r\n                    categories.map( category => (\r\n                        <GifGrid key={ category } category={category} />\r\n                    ))\r\n                }\r\n            </ol>\r\n        </>\r\n    )\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\n\nReactDOM.render(    \n    <GifExpertApp />,    \n    document.getElementById('root')\n);"],"sourceRoot":""}